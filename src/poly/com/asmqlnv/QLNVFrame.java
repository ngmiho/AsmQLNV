/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.com.asmqlnv;

import poly.com.data.ModelNhanVien;
import poly.com.data.ModelNhanVienFind;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.scene.web.PromptData;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.nimbus.NimbusStyle;
import javax.swing.table.DefaultTableModel;
import poly.com.util.Time;


/**
 *
 * @author ADMIN
 */
public class QLNVFrame extends javax.swing.JFrame {

    String linkImage = "";
    int flagFind = 0;
    
    DefaultTableModel model;
    
    public QLNVFrame(String currentUser) { //nhớ set đối số ở main bên dưới trước, null hoặc ""
        initComponents();
        //loadTime();
        Time.loadHour(lbltime);
        setLocationRelativeTo(null); //căn giữa trên màn hình
        lblwelcome.setText("Welcome! " + currentUser);
        setTitle("Management");
        
    }
    
    
    Thread time;
    Thread day;
    public void loadTime() {
        time = new Thread() {
            @Override
            public void run() {
                while (true) {
                    Date d = new Date();
                    SimpleDateFormat f = new SimpleDateFormat("hh:mm:ss a");
                    String time = f.format(d);
                    lbltime.setText(time);
                    try {
                        Thread.sleep(1000);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        };
        day = new Thread() {
            @Override
            public void run() {
                while (true) {
                    Date d = new Date();
                    SimpleDateFormat fd = new SimpleDateFormat("dd/MM/yyyy");
                    String day = fd.format(d);
                    lblday.setText(day);
                    try {
                        Thread.sleep(1000);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        };
        time.start();
        day.start();
    }
    
    public void clearControl() {
        txtmanv.setText("");
        txthoten.setText("");
        txttuoi.setText("");
        txtluong.setText("");
        txtemail.setText("");
        vitri = -1;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        lblmanv = new javax.swing.JLabel();
        lblhoten = new javax.swing.JLabel();
        lbltuoi = new javax.swing.JLabel();
        lblemail = new javax.swing.JLabel();
        lblluong = new javax.swing.JLabel();
        txtmanv = new javax.swing.JTextField();
        txthoten = new javax.swing.JTextField();
        txttuoi = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtluong = new javax.swing.JTextField();
        lblsearch = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnnew = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnopen = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldanhsach = new javax.swing.JTable();
        btnnext = new javax.swing.JButton();
        btnbottom = new javax.swing.JButton();
        btnprecious = new javax.swing.JButton();
        btntop = new javax.swing.JButton();
        lblimage = new javax.swing.JLabel();
        btnimg = new javax.swing.JButton();
        btnsort = new javax.swing.JButton();
        lblemailerror = new javax.swing.JLabel();
        lblageerror = new javax.swing.JLabel();
        lbltime = new javax.swing.JLabel();
        lblday = new javax.swing.JLabel();
        lblnumber = new javax.swing.JLabel();
        lblwelcome = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(197, 121, 27));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.setToolTipText("");
        jPanel1.setName(""); // NOI18N

        lblmanv.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblmanv.setForeground(new java.awt.Color(255, 255, 255));
        lblmanv.setText("ID");

        lblhoten.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblhoten.setForeground(new java.awt.Color(255, 255, 255));
        lblhoten.setText("Name");

        lbltuoi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbltuoi.setForeground(new java.awt.Color(255, 255, 255));
        lbltuoi.setText("Age");

        lblemail.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblemail.setForeground(new java.awt.Color(255, 255, 255));
        lblemail.setText("Email");

        lblluong.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblluong.setForeground(new java.awt.Color(255, 255, 255));
        lblluong.setText("Salary");

        txtmanv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtmanvMouseClicked(evt);
            }
        });

        txthoten.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txthotenMouseClicked(evt);
            }
        });
        txthoten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthotenActionPerformed(evt);
            }
        });

        txttuoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txttuoiMouseClicked(evt);
            }
        });
        txttuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttuoiActionPerformed(evt);
            }
        });

        txtemail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtemailMouseClicked(evt);
            }
        });

        txtluong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtluongMouseClicked(evt);
            }
        });

        lblsearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblsearch.setForeground(new java.awt.Color(255, 255, 255));
        lblsearch.setText("Searching");

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Employee Management System");

        btnnew.setText("NEW");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btnadd.setText("ADD");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnopen.setText("OPEN");
        btnopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopenActionPerformed(evt);
            }
        });

        btnexit.setText("EXIT");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        tbldanhsach.setBackground(new java.awt.Color(197, 121, 27));
        tbldanhsach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        tbldanhsach.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        tbldanhsach.setForeground(new java.awt.Color(255, 255, 255));
        tbldanhsach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Email", "Salary"
            }
        ));
        tbldanhsach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldanhsachMouseClicked(evt);
            }
        });
        tbldanhsach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbldanhsachKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbldanhsachKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tbldanhsach);

        btnnext.setText(">>");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnbottom.setText(">|");
        btnbottom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbottomActionPerformed(evt);
            }
        });

        btnprecious.setText("<<");
        btnprecious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreciousActionPerformed(evt);
            }
        });

        btntop.setText("|<");
        btntop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntopActionPerformed(evt);
            }
        });

        lblimage.setBackground(new java.awt.Color(255, 255, 255));
        lblimage.setForeground(new java.awt.Color(255, 255, 255));
        lblimage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        btnimg.setBackground(new java.awt.Color(255, 153, 51));
        btnimg.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnimg.setForeground(new java.awt.Color(255, 255, 255));
        btnimg.setText("Image");
        btnimg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimgActionPerformed(evt);
            }
        });

        btnsort.setText("SORT BY");
        btnsort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsortActionPerformed(evt);
            }
        });

        lblemailerror.setForeground(new java.awt.Color(255, 255, 255));

        lblageerror.setForeground(new java.awt.Color(255, 255, 255));

        lbltime.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbltime.setForeground(new java.awt.Color(255, 255, 255));
        lbltime.setText("  ");

        lblday.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblday.setForeground(new java.awt.Color(255, 255, 255));

        lblnumber.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblnumber.setForeground(new java.awt.Color(255, 255, 255));

        lblwelcome.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        lblwelcome.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(btntop, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnprecious, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)
                        .addComponent(lblnumber)
                        .addGap(169, 169, 169)
                        .addComponent(btnnext, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnbottom, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblwelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnsort, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblmanv, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblhoten, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbltuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblluong, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblemail, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblemailerror, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtluong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                            .addComponent(txttuoi, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txthoten, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtmanv, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblageerror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(lblsearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(315, 315, 315)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnimg, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56))
                            .addComponent(lblimage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnnew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnupdate, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(btnsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnopen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbltime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(104, 104, 104))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltime)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblwelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnnew, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnopen, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnsort, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtmanv, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblmanv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblhoten, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbltuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblageerror, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblluong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblemail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblemailerror, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblimage, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnimg, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnext)
                    .addComponent(btnbottom)
                    .addComponent(btnprecious)
                    .addComponent(btntop)
                    .addComponent(lblnumber))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1035, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txthotenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthotenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthotenActionPerformed

    private void btntopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntopActionPerformed
        if ((vitri != 0) && (!arrNV.isEmpty())) {
            vitri = 0;
            LoadDataToControl(vitri);
            tbldanhsach.setRowSelectionInterval(vitri, vitri);
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        }
        
        
    }//GEN-LAST:event_btntopActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        if ((vitri < arrNV.size() - 1) && (!arrNV.isEmpty())) {
            vitri = vitri + 1;
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        }
        else if (vitri == arrNV.size() - 1 && (!arrNV.isEmpty())){
            vitri = 0;
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        }
        else if (vitri == -1) 
            return;
        LoadDataToControl(vitri); //mới có dữ liệu trên nút được di chuyể
        tbldanhsach.setRowSelectionInterval(vitri, vitri); // cái này thì trên bảng mới di chuyển theo
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnpreciousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreciousActionPerformed
        if ((vitri == -1) && (arrNV.isEmpty()))
            return;
        else if (((vitri == -1)&& (!arrNV.isEmpty())) || ((vitri == 0) && (!arrNV.isEmpty()))) {
            vitri = arrNV.size() - 1;
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        }
        else if ((vitri > 0) && (!arrNV.isEmpty())) {
            vitri = vitri - 1;
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        }
            
        LoadDataToControl(vitri); //mới có dữ liệu trên nút được di chuyển
        tbldanhsach.setRowSelectionInterval(vitri, vitri);
    }//GEN-LAST:event_btnpreciousActionPerformed

    private void btnbottomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbottomActionPerformed
        if ((vitri != arrNV.size() - 1) && (!arrNV.isEmpty())) {
            vitri = arrNV.size() - 1;
            LoadDataToControl(vitri);
            tbldanhsach.setRowSelectionInterval(vitri, vitri);
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        }
    }//GEN-LAST:event_btnbottomActionPerformed

    private void txttuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttuoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttuoiActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        txtmanv.setText("");
        txthoten.setText("");
        txttuoi.setText("");
        txtluong.setText("");
        txtemail.setText("");
        vitri = -1;
        tbldanhsach.clearSelection();
        txtmanv.setBackground(Color.white);
        txthoten.setBackground(Color.white);
        txttuoi.setBackground(Color.white);
        txtluong.setBackground(Color.white);
        txtemail.setBackground(Color.white);
        lblimage.setIcon(ResizeImage(""));
    }//GEN-LAST:event_btnnewActionPerformed

    ArrayList<ModelNhanVien> arrNV = new ArrayList<>();
    int arrMin = 0;
    int arrMax = arrNV.size();
    
    public boolean LoadDataToArrayList() {
        ModelNhanVien nv = new ModelNhanVien();
        String err = "";
        int countMaNV = 0;
        try {
            if (txtmanv.getText().equals("") == true){
                err += "Can not let ID empty\n";
                txtmanv.setBackground(Color.red);
                countMaNV++;
            }
            for (int i = 0; i < arrNV.size(); i++) {
                if (txtmanv.getText().equalsIgnoreCase(arrNV.get(i).getMaNV()) == true) {
                    err += "ID is exists\n";
                    countMaNV++;
                }      
            }
            if (countMaNV == 0) 
                txtmanv.setBackground(Color.white);
            
            if (txthoten.getText().equals("") == true){
                err += "Can not let Name empty\n";
                txthoten.setBackground(Color.red);
            }
            else {
                nv.setHoten(txthoten.getText());
               txthoten.setBackground(Color.white);
            }
                
            
            String regex = "(^-)*\\d+(.\\d+)*";
            if (txttuoi.getText().matches(regex) == false){
                err += "Age must be a number\n";
                txttuoi.setBackground(Color.red);
            }
                
            else if (Integer.parseInt(txttuoi.getText()) < 18 || Integer.parseInt(txttuoi.getText()) > 65) {
                err += "Age must between 18 and 65\n";
                txttuoi.setBackground(Color.red);
                lblageerror.setText("18 <= age <= 65");
            }
            else {
                nv.setTuoi(Integer.parseInt(txttuoi.getText()));
                txttuoi.setBackground(Color.white);
                lblageerror.setText("");
            }

            if (txtluong.getText().matches(regex) == false) {
                err += "Salary must be a number\n";
                txtluong.setBackground(Color.red);
            }
            else if (Double.parseDouble(txtluong.getText()) <= 0) {
                err += "Salary must be more than 0\n";
                txtluong.setBackground(Color.red);
            }
            else {
                nv.setLuong(Double.parseDouble(txtluong.getText()));
                txtluong.setBackground(Color.white);
            }
            
            String mau = "\\w@\\w+(\\.\\w){1,2}";
            if (txtemail.getText().equals("") == true) {
                err += "Email can not let empty\n";
                txtemail.setBackground(Color.red);
            } else if (txtemail.getText().matches(mau) == false) {
                err += "Email wrong format\n";
                txtemail.setBackground(Color.red);
                lblemailerror.setText("ex: a@gmail.c");
            } else {
                nv.setEmail(txtemail.getText());
                txtemail.setBackground(Color.white);
                lblemailerror.setText("");
            }
            
            
            if (err == ""){
                nv.setMaNV(txtmanv.getText());
                nv.setHoten(txthoten.getText());
                nv.setTuoi(Integer.parseInt(txttuoi.getText()));
                nv.setEmail(txtemail.getText());
                nv.setLuong(Double.parseDouble(txtluong.getText()));
                nv.setLink(linkImage);
                arrNV.add(nv);
                return true;
            }        
            else {
                JOptionPane.showMessageDialog(this, err);
                new java.util.Timer().schedule( //làm 1 việc gì đó sau 1 khoảng thời gian
                        new java.util.TimerTask() { 
                         @Override
                         public void run() {
                            txtmanv.setBackground(Color.white);
                            txthoten.setBackground(Color.white);
                            txttuoi.setBackground(Color.white);
                            txtluong.setBackground(Color.white);
                            txtemail.setBackground(Color.white);
                         }
                        },
                        5000
                );
                return false;
            }
            //ModelNhanVien nv = new ModelNhanVien(txtmanv.getText(), txthoten.getText(), Integer.parseInt(txttuoi.getText()), txtemail.getText(), Double.parseDouble(txtluong.getText()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed! Please try again!\n" + err);
            return false;
        }
    }
    
    public void LoadDataArrayListToTable() {
        model = (DefaultTableModel) tbldanhsach.getModel();
        model.setRowCount(0);
//        for (ModelNhanVien nv : arrNV) {
//            model.addRow(new Object[]{nv.getMaNV(), nv.getHoten(), nv.getTuoi(), nv.getEmail(), nv.getLuong()});
//        }

        for (ModelNhanVien nv : arrNV) {
            Vector vec = new Vector();
            vec.add(nv.getMaNV());
            vec.add(nv.getHoten());
            vec.add(nv.getTuoi());
            vec.add(nv.getEmail());
            vec.add(nv.getLuong());
            model.addRow(vec);
        }
    }
    
    
    
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        if (LoadDataToArrayList() == true) {
            LoadDataArrayListToTable();
            JOptionPane.showMessageDialog(this, "Added successful");
            txtmanv.setText("");
            txthoten.setText("");
            txttuoi.setText("");
            txtluong.setText("");
            txtemail.setText("");      
            lblimage.setIcon(ResizeImage(""));
            
            lblnumber.setText("/" + arrNV.size());
            
        } else
            JOptionPane.showMessageDialog(this, "Add failed");
        clearControl();
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        ModelNhanVien nv = new ModelNhanVien();
        String err = "";
        int countMaNV = 0;
        if (vitri != -1) {
            if (txthoten.getText().equals("") == true){
                err += "Can not let Name empty\n";
                txthoten.setBackground(Color.red);
            }
            else {
                nv.setHoten(txthoten.getText());
               txthoten.setBackground(Color.white);
            }
                
            
            String regex = "(^-)*\\d+(.\\d+)*";
            if (txttuoi.getText().matches(regex) == false){
                err += "Age must be a number\n";
                txttuoi.setBackground(Color.red);
            }
                
            else if (Integer.parseInt(txttuoi.getText()) < 18 || Integer.parseInt(txttuoi.getText()) > 65) {
                err += "Age must between 18 and 65\n";
                txttuoi.setBackground(Color.red);
                lblageerror.setText("18 <= age <= 65");
            }
            else {
                nv.setTuoi(Integer.parseInt(txttuoi.getText()));
                txttuoi.setBackground(Color.white);
                lblageerror.setText("");
            }

            if (txtluong.getText().matches(regex) == false) {
                err += "Salary must be a number\n";
                txtluong.setBackground(Color.red);
            }
            else if (Double.parseDouble(txtluong.getText()) <= 0) {
                err += "Salary must be more than 0\n";
                txtluong.setBackground(Color.red);
            }
            else {
                nv.setLuong(Double.parseDouble(txtluong.getText()));
                txtluong.setBackground(Color.white);
            }
            
            String mau = "\\w@\\w+(\\.\\w){1,2}";
            if (txtemail.getText().equals("") == true) {
                err += "Email can not let empty\n";
                txtemail.setBackground(Color.red);
            } else if (txtemail.getText().matches(mau) == false) {
                err += "Email wrong format\n";
                txtemail.setBackground(Color.red);
                lblemailerror.setText("ex: a@gmail.c");
            } else {
                nv.setEmail(txtemail.getText());
                txtemail.setBackground(Color.white);
                lblemailerror.setText("");
            }
            
            
            if (err == ""){
                nv.setMaNV(txtmanv.getText());
                nv.setHoten(txthoten.getText());
                nv.setTuoi(Integer.parseInt(txttuoi.getText()));
                nv.setEmail(txtemail.getText());
                nv.setLuong(Double.parseDouble(txtluong.getText()));
                nv.setLink(linkImage);
                arrNV.set(vitri, nv);
                LoadDataArrayListToTable(); 
                JOptionPane.showMessageDialog(this, "Update successful");
                vitri = -1;
                lblimage.setIcon(ResizeImage(""));
            }        
            else {
                JOptionPane.showMessageDialog(this, err);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Update failed! Please choose an index of list\n");
//            return;
        }
        clearControl();
//        arrNV.set(vitri, nv);
//        LoadDataArrayListToTable();
//        JOptionPane.showMessageDialog(this, "Successful");
    }//GEN-LAST:event_btnupdateActionPerformed
    
    int vitri = -1;
    public void LoadDataToControl(int vitri) {
        txtmanv.setText(arrNV.get(vitri).getMaNV());
        txthoten.setText(arrNV.get(vitri).getHoten());
        txtemail.setText(arrNV.get(vitri).getEmail());
        txtluong.setText(String.valueOf(arrNV.get(vitri).getLuong()));
        txttuoi.setText(String.valueOf(arrNV.get(vitri).getTuoi()));
        lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
    }
    private void tbldanhsachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldanhsachMouseClicked
        vitri = tbldanhsach.getSelectedRow();
        lblnumber.setText(vitri + "/" + arrNV.size());
        
        if (flagFind == 0 ) {
            LoadDataToControl(vitri);
            lblimage.setIcon(ResizeImage(arrNV.get(vitri).getLink()));
        } else 
            loadSearchToControl(vitri);
            
    }//GEN-LAST:event_tbldanhsachMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        if (vitri != -1) {
            arrNV.remove(vitri);
            LoadDataArrayListToTable();
            JOptionPane.showMessageDialog(this, "Deleted succesfully");
            lblimage.setIcon(ResizeImage(""));
        } else
            JOptionPane.showMessageDialog(this, "Deleted fail! Please choose an index for delete");
        clearControl();
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Do you want to exit?", 
                "Exit", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION)
            System.exit(0);
                
    }//GEN-LAST:event_btnexitActionPerformed

    private void txtmanvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtmanvMouseClicked
        txtmanv.setBackground(Color.white);
    }//GEN-LAST:event_txtmanvMouseClicked

    private void txthotenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txthotenMouseClicked
        txthoten.setBackground(Color.white);
    }//GEN-LAST:event_txthotenMouseClicked

    private void txttuoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txttuoiMouseClicked
        txttuoi.setBackground(Color.white);
    }//GEN-LAST:event_txttuoiMouseClicked

    private void txtemailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtemailMouseClicked
        txtemail.setBackground(Color.white);
    }//GEN-LAST:event_txtemailMouseClicked

    private void txtluongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtluongMouseClicked
        txtluong.setBackground(Color.white);
    }//GEN-LAST:event_txtluongMouseClicked
    
    
    public boolean saveFileObject(ArrayList<ModelNhanVien> arrNV, String link) {
        try {
            FileOutputStream fo = new FileOutputStream(link);
            ObjectOutputStream objo = new ObjectOutputStream(fo);
            objo.writeObject(arrNV);
            
            objo.close();
            fo.close();
            return true;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File error, link save file");
            ex.printStackTrace();
            return false;
        }
    }
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        if (saveFileObject(arrNV, "D:\\Java_File\\asm_test.txt") == true)
            JOptionPane.showMessageDialog(this, "Saved file succesful!!!");
        else
            JOptionPane.showMessageDialog(this, "Save file Failed!!!");
    }//GEN-LAST:event_btnsaveActionPerformed
    
    
    public void readFileObject(String link) {
        try {
            FileInputStream fin = new FileInputStream(link);
            ObjectInputStream objin = new ObjectInputStream(fin);
            Object doc = objin.readObject();
            arrNV = (ArrayList<ModelNhanVien>) doc;
            
            objin.close();
            fin.close();
            JOptionPane.showMessageDialog(this, "Opened file succesfull!!!");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Open file failed");
        }
    }
    
    private void btnopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopenActionPerformed
        readFileObject("D:\\Java_File\\asm_test.txt");
        LoadDataArrayListToTable();
    }//GEN-LAST:event_btnopenActionPerformed

    
    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblimage.getWidth(), lblimage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }                            
    private void btnimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimgActionPerformed
        try { 
            JFileChooser f = new JFileChooser("D:\\Java_Anh");
            f.setDialogTitle("Mở file");
            f.showOpenDialog(null);
            FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Hình Ảnh", "jpg", "png");
            f.setFileFilter(imageFilter);
            File fteanh = f.getSelectedFile();
            linkImage = fteanh.getAbsolutePath();
            lblimage.setIcon(ResizeImage(String.valueOf(linkImage)));
        } catch (Exception ex) { //để có cancel thì null không bị lỗi
            System.out.println("Picture not choose yet");
        }
    }//GEN-LAST:event_btnimgActionPerformed

    
    ArrayList<ModelNhanVienFind> arrNVFind = new ArrayList<ModelNhanVienFind>();
    
    public void search() {
        arrNVFind.clear(); //để không bị cộng dồn
        for (int i = 0; i < arrNV.size(); i++) {
            if (arrNV.get(i).getHoten().contains(txtsearch.getText()) == true) {
                ModelNhanVienFind nvf = new ModelNhanVienFind(i, arrNV.get(i).getMaNV(),
                        arrNV.get(i).getHoten(), arrNV.get(i).getTuoi(),
                        arrNV.get(i).getEmail(), arrNV.get(i).getLuong(), arrNV.get(i).getLink());
                arrNVFind.add(nvf);
            }
        }
        loadSearchToTable();
    }
    public void loadSearchToTable() {
        model = (DefaultTableModel) tbldanhsach.getModel();
        model.setRowCount(0); //load cột từ hàng đầu tiên
        for (ModelNhanVien x : arrNVFind) {
            Vector v = new Vector();
            v.add(x.getMaNV());
            v.add(x.getHoten());
            v.add(x.getTuoi());
            v.add(x.getEmail());
            v.add(x.getLuong());
            model.addRow(v);
        }
    }
    public void loadSearchToControl(int vitri) {
        txtmanv.setText(arrNVFind.get(vitri).getMaNV());
        txthoten.setText(arrNVFind.get(vitri).getHoten());
        txtemail.setText(arrNVFind.get(vitri).getEmail());
        txtluong.setText(String.valueOf(arrNVFind.get(vitri).getLuong()));
        txttuoi.setText(String.valueOf(arrNVFind.get(vitri).getTuoi()));
        lblimage.setIcon(ResizeImage(arrNVFind.get(vitri).getLink()));
    }
    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        if (txtsearch.getText().isEmpty())  {
            flagFind = 0;
            LoadDataArrayListToTable();
        }
        else {
            flagFind = 1;
            search();
        }
    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed

    }//GEN-LAST:event_txtsearchKeyPressed

    private void tbldanhsachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbldanhsachKeyPressed
        
    }//GEN-LAST:event_tbldanhsachKeyPressed
    
    Comparator<ModelNhanVien> cmp;
    public void sortByName() {
        cmp = new Comparator<ModelNhanVien>() {
            @Override
            public int compare(ModelNhanVien o1, ModelNhanVien o2) {
                int x = o2.getHoten().compareTo(o1.getHoten());
                return x;
            }
        };
            Collections.sort(arrNV, cmp);
            LoadDataArrayListToTable();
            vitri = -1;
            lblimage.setIcon(ResizeImage(arrNV.get(0).getLink()));
    }
    public void sortBySalary() {
        cmp = new Comparator<ModelNhanVien>() {
            @Override
            public int compare(ModelNhanVien o1, ModelNhanVien o2) {
                
                //c1:
                //int x = (int) (o1.getLuong - 02.getLuong);
                
                //c2:
                //double d1 = o1.marks;
                //double d2 = o2.marks;
                //return Double.compare(d1, d2);
                
                //c3:
                double delta = o1.getLuong() - o2.getLuong();
                if (delta > 0.00001) return 1;
                if (delta < -0.00001) return -1;
                return 0;
            }
        };
            Collections.sort(arrNV, cmp);
            LoadDataArrayListToTable();
            vitri = -1;
            lblimage.setIcon(ResizeImage(arrNV.get(0).getLink()));
    }
    public void sortByID() {
        cmp = new Comparator<ModelNhanVien>() {
            @Override
            public int compare(ModelNhanVien o1, ModelNhanVien o2) {
//                int x = o1.getMaNV().compareTo(o2.getMaNV());
//                return x;
                    return o1.getMaNV().compareTo(o2.getMaNV());
            }
        };
            Collections.sort(arrNV, cmp);
            LoadDataArrayListToTable();
            vitri = -1;
            lblimage.setIcon(ResizeImage(arrNV.get(0).getLink()));
    }
    
    
    private void btnsortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsortActionPerformed
        String ch = JOptionPane.showInputDialog("1.By ID\n2.By name\n3.By salary\n\n Please choose one\nEx: 1");
        try {
            int choice = Integer.parseInt(ch);
            switch (choice) {
            case 1:
                sortByID();
                break;
            case 2:
                sortByName();
                break;
            case 3:
                sortBySalary();
                break;
        }
        } catch (Exception ex) {
            ex.printStackTrace();
        }   
    }//GEN-LAST:event_btnsortActionPerformed

    private void tbldanhsachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbldanhsachKeyReleased
        //lblnumber.setText(String.valueOf(tbldanhsach.getSelectedRow() + 1) + "/" + arrNV.size());
        //lblimage.setIcon(ResizeImage(arrNV.get(tbldanhsach.getSelectedRow()).getLink()));
        vitri = tbldanhsach.getSelectedRow();
        lblnumber.setText(vitri + "/" + arrNV.size());
        if (flagFind == 0)
            LoadDataToControl(vitri);
        else 
            loadSearchToControl(vitri);
    }//GEN-LAST:event_tbldanhsachKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLNVFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLNVFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLNVFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLNVFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLNVFrame("").setVisible(true); //set currentUser null hoặc "" nếu chưa đăng nhập để chạy được chương trình
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnbottom;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnimg;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnopen;
    private javax.swing.JButton btnprecious;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsort;
    private javax.swing.JButton btntop;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblageerror;
    private javax.swing.JLabel lblday;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lblemailerror;
    private javax.swing.JLabel lblhoten;
    private javax.swing.JLabel lblimage;
    private javax.swing.JLabel lblluong;
    private javax.swing.JLabel lblmanv;
    private javax.swing.JLabel lblnumber;
    private javax.swing.JLabel lblsearch;
    private javax.swing.JLabel lbltime;
    private javax.swing.JLabel lbltuoi;
    private javax.swing.JLabel lblwelcome;
    private javax.swing.JTable tbldanhsach;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txthoten;
    private javax.swing.JTextField txtluong;
    private javax.swing.JTextField txtmanv;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txttuoi;
    // End of variables declaration//GEN-END:variables
}
